{"code":"import { isObject } from \"@vue/shared\";\nimport { mutableHandlers, shallowReactiveHandlers, readonlyHandlers, shallowReadonlyHandlers } from \"./baseHandlers\";\nexport function reactive(target) {\n    return createReactiveObject(target, false, mutableHandlers);\n}\nexport function shallowReactive(target) {\n    return createReactiveObject(target, false, shallowReactiveHandlers);\n}\nexport function readonly(target) {\n    return createReactiveObject(target, true, readonlyHandlers);\n}\nexport function shallowReadonly(target) {\n    return createReactiveObject(target, true, shallowReadonlyHandlers);\n}\nconst reactiveMap = new WeakMap();\nconst readonlyMap = new WeakMap();\nexport function createReactiveObject(target, isReadonly, baseHandler) {\n    // 如果目标不是对象， 没法拦截，reactive只能拦截对象类型\n    if (!isObject(target)) {\n        return target;\n    }\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\n    if (proxyMap.has(target)) {\n        return proxyMap.get(target);\n    }\n    const proxy = new Proxy(target, baseHandler);\n    proxyMap.set(target, proxy);\n    return proxy;\n}\n","references":["/Users/xieziqian/project/cgy/xzq-cli/packages/shared/src/index.ts","/Users/xieziqian/project/cgy/xzq-cli/packages/reactivity/type.ts","/Users/xieziqian/project/cgy/xzq-cli/packages/reactivity/src/baseHandlers.ts"],"dts":{"name":"/Users/xieziqian/project/cgy/xzq-cli/node_modules/.cache/rollup-plugin-typescript2/placeholder/reactivity/src/reactive.d.ts","writeByteOrderMark":false,"text":"import { Target, ReactiveHandler } from \"../type\";\nexport declare function reactive(target: Target): Target;\nexport declare function shallowReactive(target: Target): Target;\nexport declare function readonly(target: Target): Target;\nexport declare function shallowReadonly(target: Target): Target;\nexport declare function createReactiveObject(target: Target, isReadonly: boolean, baseHandler: ReactiveHandler): Target;\n"}}
