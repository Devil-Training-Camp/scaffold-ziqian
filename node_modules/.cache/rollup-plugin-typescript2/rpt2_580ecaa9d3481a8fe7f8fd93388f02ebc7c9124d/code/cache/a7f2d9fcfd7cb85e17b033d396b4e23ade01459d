{"code":"import { extend, isObject } from \"@vue/shared\";\nimport { reactive, readonly } from \"./reactive\";\nconst createGetter = (isReadonly = false, isShallow = false) => {\n    return function get(target, key, receiver) {\n        const res = Reflect.get(target, key, receiver);\n        if (isReadonly) {\n            // 收集依赖\n        }\n        if (!isShallow) {\n            return res;\n        }\n        if (isObject(res)) {\n            return isReadonly ? readonly(res) : reactive(res);\n        }\n        return res;\n    };\n};\nconst createSetter = (isReadonly = false) => {\n    return function set(target, key, value, receiver) {\n        const res = Reflect.set(target, key, value, receiver);\n        return res;\n    };\n};\nconst get = createGetter();\nconst shallowGet = createGetter(false, true);\nconst readonlyGet = createGetter(true, false);\nconst shallowReadonlyGet = createGetter(true, true);\nconst set = createSetter();\nconst shallowSet = createSetter(false);\nconst readonlyObj = {\n    set: (target, key, value, receiver) => {\n        console.warn(`set ${target} key ${String(key)} is readonly`);\n        return false;\n    }\n};\nexport const mutableHandlers = {\n    get,\n    set\n};\nexport const shallowReactiveHandlers = {\n    get: shallowGet,\n    set: shallowSet\n};\nexport const readonlyHandlers = extend({\n    get: readonlyGet,\n}, readonlyObj);\nexport const shallowReadonlyHandlers = extend({\n    get: shallowReadonlyGet\n}, readonlyObj);\n","references":["/Users/xieziqian/project/cgy/xzq-cli/packages/shared/src/index.ts","/Users/xieziqian/project/cgy/xzq-cli/packages/reactivity/type.ts","/Users/xieziqian/project/cgy/xzq-cli/packages/reactivity/src/reactive.ts"],"dts":{"name":"/Users/xieziqian/project/cgy/xzq-cli/node_modules/.cache/rollup-plugin-typescript2/placeholder/reactivity/src/baseHandlers.d.ts","writeByteOrderMark":false,"text":"import { ReactiveHandler } from \"../type\";\nexport declare const mutableHandlers: ReactiveHandler;\nexport declare const shallowReactiveHandlers: ReactiveHandler;\nexport declare const readonlyHandlers: ReactiveHandler;\nexport declare const shallowReadonlyHandlers: ReactiveHandler;\n"}}
